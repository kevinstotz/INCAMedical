"""
Django settings for API project.

Generated by 'django-admin startproject' using Django 2.1.2.

For more information on this file, see
https://docs.djangoproject.com/en/2.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.1/ref/settings/
"""

import os
from os.path import join, abspath, dirname, relpath, realpath

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = abspath(dirname(__name__))  # .../DimeAPI
PROJECT_DIR = dirname(dirname(abspath(__file__)))  # .../DimeAPI/DimeAPI
SETTINGS_DIR = dirname(realpath(__file__))  # .../DimeAPI/DimeAPI/settings
PROJECT_NAME = relpath(PROJECT_DIR)  # DimeAPI

# SECURITY WARNING: don't run with debug turned on in production!

SECURE = 'https://'
UNSECURE = 'http://'

WEBSITE_IP_ADDRESS = "192.168.1.18"
WEBSITE_HOSTNAME = 'yogishouse.com'
WEBSITE_HOSTNAME_PORT = 3000
WEBSITE_HOSTNAME_URL = WEBSITE_HOSTNAME + ":" + str(WEBSITE_HOSTNAME_PORT)

ENGINE_IP_ADDRESS = "192.168.1.18"
ENGINE_DOMAIN = 'yogishouse.com'
ENGINE_HOSTNAME = 'www' + "." + ENGINE_DOMAIN
ENGINE_HOSTNAME_PORT = 8000
ENGINE_HOSTNAME_URL = UNSECURE + ENGINE_HOSTNAME + ":" + str(ENGINE_HOSTNAME_PORT)

LOCAL_HOST = 'localhost'
LOCAL_HOST_PORT = 10100
LOCAL_HOST_AND_PORT = LOCAL_HOST + ':' + str(LOCAL_HOST_PORT)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '(tlbv7h$1t9tono86(4w%aat9@%6*^#s7q)f1hojg#v8f&16ig'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [LOCAL_HOST, ]

# Application definition

INSTALLED_APPS = [
    'corsheaders',
    'rest_framework',
    'rest_framework_filters',
    'django_user_agents',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'API.apps.APIConfig',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django_user_agents.middleware.UserAgentMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

REST_FRAMEWORK = {
    #  'PAGE_SIZE': 10,
    'EXCEPTION_HANDLER': 'rest_framework_json_api.exceptions.exception_handler',
    'DEFAULT_FILTER_BACKENDS': ('rest_framework_filters.backends.RestFrameworkFilterBackend',
                                'rest_framework.filters.SearchFilter',
                                'rest_framework.filters.OrderingFilter', ),
    'DEFAULT_PAGINATION_CLASS':
        'rest_framework_json_api.pagination.PageNumberPagination',
    'DEFAULT_PARSER_CLASSES': (
        'rest_framework_json_api.parsers.JSONParser',
        'rest_framework.parsers.MultiPartParser',
    ),
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework_json_api.renderers.JSONRenderer',
        'rest_framework.renderers.BrowsableAPIRenderer',
    ),
    'DEFAULT_METADATA_CLASS': 'rest_framework_json_api.metadata.JSONAPIMetadata',
}

CORS_ORIGIN_WHITELIST = (
     LOCAL_HOST + ':' + str(LOCAL_HOST_PORT),
)
CSRF_TRUSTED_ORIGINS = (
     LOCAL_HOST + ':' + str(LOCAL_HOST_PORT),
)

CORS_ORIGIN_ALLOW_ALL = False

CORS_ALLOW_HEADERS = (
    'Content-Type',
    'Access-Control-Allow-Origin',
    'Accept',
    #  'Accept-Encoding',
    #   'x-requested-with',
    #   'x-csrftoken',
    #   'Content-Disposition',
    #   'Access-Control-Allow-Credentials',
    #   'Origin',
    #   'enctype',
    #   'user-agent',
    #   'Redirect',
    #   'Authorization',
)

#  CORS_ALLOW_CREDENTIALS = True

CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS',
)
ROOT_URLCONF = 'API.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'API.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/2.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Email settings
PASSWORD_LENGTH = 64
EMAIL_TIMEOUT = 10
EMAIL_LENGTH = 100
EMAIL_USE_TLS = True
EMAIL_TEMPLATE_DIR = join(PROJECT_NAME, "EmailTemplates")
EMAIL_FROM_DOMAIN = 'yogishouse.com'
NONCE_LENGTH = 50
ADDRESS_LENGTH = 42
SITE_ID_LENGTH = 10
URL_LENGTH = 255
COMPANY_NAME_LENGTH = 255
AUDIT_AREA_NAME_LENGTH = 255
FIRST_NAME_LENGTH = 50
LAST_NAME_LENGTH = 50
AUTHORIZATION_CODE_LENGTH = 20
IMAGE_DIR = "images/"
ICON_NAME_LENGTH = 30
UUID_ZERO = "00000000-0000-0000-0000-000000000000"
# Internationalization
# https://docs.djangoproject.com/en/2.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.1/howto/static-files/

STATIC_URL = '/static/'

AUTH_USER_MODEL = 'API.CustomUser'
USER_STATUS = {
    'ACTIVE': 1,
    'INACTIVE': 2,
    'SUSPENDED': 3,
    'BLOCKED': 4,
    'VISITOR': 5
}
NAME_TYPE = {
    'FIRST': 1,
    'LAST': 2,
    'MAIDEN': 3,
    'MIDDLE': 4,
    'NICKNAME': 5,
    'SALUTATION': 6,
    'SUFFIX': 7,
    'FULL': 8
}
#  Phone number Type
PHONE_NUMBER_TYPE = {
    'MOBILE': 1,
    'HOME': 2,
    'WORK': 3,
    'AUTO': 4
}
#  Email Templates
EMAIL_TEMPLATE = {
    'VERIFY': 1,
    'WELCOME': 2,
    'FORGOT': 3,
    'RESET': 4,
    'CONTACTUS': 5,
    'AFFILIATE': 6
}
EMAIL_ADDRESS_TYPE = {
    'PRIMARY': 1,
    'SECONDARY': 2
}
EMAIL_ADDRESS_STATUS = {
    'ACTIVE': 1,
    'INACTIVE': 2,
    'SUSPENDED': 3,
    'BLOCKED': 4,
    'EXISTS': 5,
    'NOTFOUND': 6
}
ADDRESS_TYPE = {
    'HOME': 1,
    'MAILING': 2,
    'WORK': 3
}
NOTIFICATION_TYPE = {
    'EMAIL': 1,
    'TEXT': 2,
    'PHONE': 3
}
#  Notification Status
NOTIFICATION_STATUS = {
    'READY': 1,
    'QUEUED': 2,
    'SENT': 3,
    'FAILED': 4
}
